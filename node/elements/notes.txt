next:
	make nimble.git the lib portion (where to put the master.. nimble-family / nimble-family?) .. and change repo link in npm json. .. to incubator.
	- generate a single index.html (embed <script> instead of reference)



npm publish ...
	install from local.. test in current.. npm publish



-------------

upg:
	- add bootstrap snake, webrtc, packages, hello-world (same as basic or nothing but index.html? with hello world in it.?)

	--bootstrap basic-framework (live-display, live-forms, flow, mustache, handlebars, underscore, jquery, etc (see populars?), minimist?, bluebird, validator)


	- add bootstrap snake video as gif at top of page. .. next: beter quality
		- install nimble
		- mkdir
		- bootstrap snake
		- open


	- option on bootstraping to customize fields --interactive (name, version etc) .. kinda like npm init .. to fill {{fields}} in template files.

	- add basic created code to help .. created.js sample code (as a code block)
		var $ = require('jquery')
		var _ = require('underscore')

		var h = this.head
		var b = this.body
		var f = this.footer 

		dom.innerHTML = h+b+f

		this.attached = function(){ console.log('hi!') }
		this.detached = function(){ console.log('bye!') }

		this.onclick = e=>{ console.log('poke.') }

		var x = this.getAttribute('x')

		$('h1',dom).textContent(x)

	- upg: normally operate in 'quiet' mode unless -v

	- upg: nimble --docs .. make docs? .. or whole system of learning.. perhaps interactive text application?

	- nimble for electron might be nice.. as woudln't have to run live server.

	- make myproject code match readme doc code.

	- add nimble --bootstrap-list

	- allow boostrap only from list (directory scan based)

	- improve nimble --help

	- make public upcoming features?

	- add "Adam Mitchell" <adam.mitchell@q9design.com> address to contact info

	- fill out templates/system/help.txt  (mention in readme.md .. nimble --help to learn more)

	- move temp path to system /tmp/nimble_hash(full_path_to_here) or
	    optionally? by request -t = /path/to/temp/folder

	- option to build output something like... nimble --bootstrap world-zones --out ./my-world-zones    <<< makes new folder if not exist.

	- compile all to index.html (no bundle.js)  -- bundle bundle.js into local index.html file.

	- in bootstrap examples.. make some that are kinda like lessons or challenages .. could be as simple as leaveing todos: .. and perhaps a open one and 'solved' versions to check for answers.


	nimble --bootstrap (or --no-bootstrap) .. if folder empty?  (global config possible?)

	system to watch for changes to source files and run nimble build on changes

	bundle live-server? https://www.npmjs.com/package/live-server -- run via api.

	(optionally: nimble --bootstrap)  .. generates example framework in current directly.. (ask if dir isn't empty)

	- document adding libs to your project to require('./lib.js')

	upg: nimble --example  .. generates example app

	upg: copy media to ./build/media/	//upg: option to include media to this.media['name'] as dataurl and or option as blob. into bundle.js or other options? (lib hook to install to indexedDB?)
		- but for now use a local ../media folder?


	upg: auto reload via reload.txt file (inc number) .. load every 1 second via fetch type thing. (so can local reload) .. only durring dev mode.

	upg: support for service worker? (perhaps a dual app? .. installer/loader app, and loaded updateable indexedDB app?)

	upg: add build path option (so not default .build)

	upg: nimble -v .. display current version (taken from package.json? .. or a designed way?)

	upg: nimble --bootstrap
		upg: nimble --bootstrap-list   .. list possable bootstrap options (how can we get tab to do this?)

		upg: nimble -bootstrap examples .. expl look for examples that are very direct to nimble (less it's own code needed)

		upg: nimble --bootstrap world-clocks .. to warn/manage if already have files in dest path


	upg?: should we make the app in an app/ folder.. this way could have multple within the same?  (or why not just do that on your own and nimble from each one?)

	upg: npm init / install automatically programattically if none found?

	upg: bootstrap example how to use npm packages (moment)

	upg: nimble --bootstrap <namehere> ... pull from registry of nimble bootstrap apps, have a way to add your own local bootstrap list, --bootstrap-list .. shows the items available (upg: --bootstrap-search?)

	upg: debug data as option (noramally not included in bundle.js)

	upg: md version of helps?


nimble-node-element
	- add propery change and such events accessable to created.
	- add hook for decendant setting
	- upg: auto dependentcies so can nest/reuse.

perhaps nimble node elements should be it's own project (instead of all the node versions) .. upg: split nimble versions to single target projects? (how to do that cascade reference like?) .. perhaps only in npm have it seperate?



=================
2015.10.29 demo script

	sudo npm i -g nimble-elements

	mkdir snake
	cd snake

	nimble --bootstrap snake

	ls -l

	browser.. enter.  -- file://home/demo/snake/_build/index.html



=================

2015.10.28
	- [am]
	created.js code sample in README.md


2015.10.29
	- [am]
	bootstrap-list
	snake
	video gif


